{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Desktop/Turingstuff/PetHealthProject/src/Components/APIComponent.js\",\n  _s = $RefreshSig$();\nimport './APIComponent.css';\nimport { useEffect, useState } from 'react';\nimport React from 'react';\n\n/// pass in input from outside this component, from formcomponent probably\n// use that to determine the parameters for the search/lookup\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction APIComponent({\n  responses,\n  setResponses\n}) {\n  _s();\n  function addResponse(newResponse) {\n    setResponses([...responses, setResponses]);\n  }\n  let input = \"pain\";\n  useEffect(() => {\n    const getPetHealth = async () => {\n      if (input) {\n        try {\n          const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1';\n          const response = await fetch(url);\n          if (!response.ok) {\n            console.log(\"not okay line 31\");\n            const err = new Error(response.statusText);\n            err.statusCode = response.status;\n            throw err;\n          } else {\n            const data = await response.json();\n            console.log(response, \" response line 27\");\n            console.log(data, \" data line 28\");\n            return data;\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    };\n    void getPetHealth();\n    // (addResponse(getPetHealth()))\n    console.log(responses);\n  }, []);\n  console.log(responses);\n  async function receiveResponses() {\n    console.log(await responses);\n    console.log(\"awaiting responses\");\n  }\n  receiveResponses();\n  // getPetHealth();\n\n  console.log(responses);\n  // console.log(responses.results)\n  // getPetHealth();\n  // console.log(response)\n  let retVal = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"res\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 18\n  }, this);\n  return responses.meta.disclaimer;\n}\n_s(APIComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = APIComponent;\nexport default APIComponent;\nvar _c;\n$RefreshReg$(_c, \"APIComponent\");","map":{"version":3,"names":["useEffect","useState","React","jsxDEV","_jsxDEV","APIComponent","responses","setResponses","_s","addResponse","newResponse","input","getPetHealth","url","response","fetch","ok","console","log","err","Error","statusText","statusCode","status","data","json","error","receiveResponses","retVal","children","fileName","_jsxFileName","lineNumber","columnNumber","meta","disclaimer","_c","$RefreshReg$"],"sources":["/Users/ryan/Desktop/Turingstuff/PetHealthProject/src/Components/APIComponent.js"],"sourcesContent":["import './APIComponent.css';\nimport { useEffect, useState } from 'react';\nimport React from 'react';\n\n/// pass in input from outside this component, from formcomponent probably\n// use that to determine the parameters for the search/lookup\n\nfunction APIComponent({ responses, setResponses }) {\n    function addResponse(newResponse) {\n        setResponses([...responses, setResponses]);\n    }\n\n    let input = \"pain\"\n    useEffect(() => {\n        const getPetHealth = async () => {\n            if (input) {\n\n                try {\n                    const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1';\n                    const response = await fetch(url);\n                    if (!response.ok) {\n                        console.log(\"not okay line 31\")\n                        const err = new Error(response.statusText)\n                        err.statusCode = response.status\n                        throw err\n                    } else {\n                        const data = await response.json();\n                        console.log(response, \" response line 27\");\n                        console.log(data, \" data line 28\");\n                        return data;\n                    }\n\n                }\n                catch (err) {\n                    console.error(err)\n                }\n            }\n        };\n        void getPetHealth();\n        // (addResponse(getPetHealth()))\n        console.log(responses)\n    }, []);\n    console.log(responses)\n    async function receiveResponses() {\n        console.log(await responses);\n\n        console.log(\"awaiting responses\")\n    }\n    receiveResponses();\n    // getPetHealth();\n\n    console.log(responses)\n    // console.log(responses.results)\n    // getPetHealth();\n    // console.log(response)\n    let retVal = <div>res</div>\n    return (responses.meta.disclaimer)\n\n}\n\n\nexport default APIComponent;"],"mappings":";;AAAA,OAAO,oBAAoB;AAC3B,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,YAAYA,CAAC;EAAEC,SAAS;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC/C,SAASC,WAAWA,CAACC,WAAW,EAAE;IAC9BH,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEC,YAAY,CAAC,CAAC;EAC9C;EAEA,IAAII,KAAK,GAAG,MAAM;EAClBX,SAAS,CAAC,MAAM;IACZ,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAID,KAAK,EAAE;QAEP,IAAI;UACA,MAAME,GAAG,GAAG,4DAA4D,GAAGF,KAAK,GAAG,UAAU;UAC7F,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;UACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;YACdC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;YAC/B,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAACN,QAAQ,CAACO,UAAU,CAAC;YAC1CF,GAAG,CAACG,UAAU,GAAGR,QAAQ,CAACS,MAAM;YAChC,MAAMJ,GAAG;UACb,CAAC,MAAM;YACH,MAAMK,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;YAClCR,OAAO,CAACC,GAAG,CAACJ,QAAQ,EAAE,mBAAmB,CAAC;YAC1CG,OAAO,CAACC,GAAG,CAACM,IAAI,EAAE,eAAe,CAAC;YAClC,OAAOA,IAAI;UACf;QAEJ,CAAC,CACD,OAAOL,GAAG,EAAE;UACRF,OAAO,CAACS,KAAK,CAACP,GAAG,CAAC;QACtB;MACJ;IACJ,CAAC;IACD,KAAKP,YAAY,CAAC,CAAC;IACnB;IACAK,OAAO,CAACC,GAAG,CAACZ,SAAS,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EACNW,OAAO,CAACC,GAAG,CAACZ,SAAS,CAAC;EACtB,eAAeqB,gBAAgBA,CAAA,EAAG;IAC9BV,OAAO,CAACC,GAAG,CAAC,MAAMZ,SAAS,CAAC;IAE5BW,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACrC;EACAS,gBAAgB,CAAC,CAAC;EAClB;;EAEAV,OAAO,CAACC,GAAG,CAACZ,SAAS,CAAC;EACtB;EACA;EACA;EACA,IAAIsB,MAAM,gBAAGxB,OAAA;IAAAyB,QAAA,EAAK;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3B,OAAQ3B,SAAS,CAAC4B,IAAI,CAACC,UAAU;AAErC;AAAC3B,EAAA,CAnDQH,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAsDrB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}