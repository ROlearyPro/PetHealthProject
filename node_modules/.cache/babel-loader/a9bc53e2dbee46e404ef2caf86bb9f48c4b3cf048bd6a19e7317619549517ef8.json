{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Desktop/Turingstuff/PetHealthProject/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport ExternalComponent from './Components/ExternalComponent';\nimport FormComponent from './Components/FormComponent';\nimport React, { useEffect, useState } from 'react';\nimport APIComponent from './Components/APIComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dummyIdeas = [{\n    id: 1,\n    title: 'Prank Travis',\n    description: 'Stick googly eyes on all his stuff'\n  }, {\n    id: 2,\n    title: 'Make a secret password app',\n    description: 'So you and your rideshare driver can both know neither one of you is lying'\n  }, {\n    id: 3,\n    title: 'Learn a martial art',\n    description: 'To exact vengeance upon my enemies'\n  }];\n  const emptyFormVals = {\n    id: -1,\n    title: '',\n    description: ''\n  };\n  const [formValues, setFormVals] = useState(emptyFormVals);\n  const [ideas, setIdeas] = useState(dummyIdeas);\n  const [responses, setResponses] = useState({});\n  function addIdea(newIdea) {\n    setIdeas([...ideas, newIdea]);\n  }\n  let input = \"pain\";\n\n  // const getPetHealth = async () => {\n  //   if (input) {\n\n  //     try {\n  //       const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1';\n  //       const response = await fetch(url);\n  //       if (!response.ok) {\n  //         console.log(\"not okay line 31\")\n  //         const err = new Error(response.statusText)\n  //         err.statusCode = response.status\n  //         throw err\n  //       } else {\n  //         const data = await response.json();\n  //         // console.log(responses);\n  //         // console.log(typeof(responses))\n  //         addResponse(data);\n  //         return data;\n  //       }\n  //     }\n  //     catch (err) {\n  //       console.error(err)\n  //     }\n  //   }\n  // };\n\n  useEffect(() => {\n    // getPetHealth();\n  }, []);\n\n  //   return fetch('https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1')\n  //     .then(res => {\n  //       if (!res.ok) {\n  //         console.log(\"not okay line 31\")\n  //         const err = new Error(res.statusText)\n  //         err.statusCode = res.status\n  //         throw err\n  //       }\n  //       console.log(\"okay line 36\")\n  //       return res.json()\n  //     })\n  //     .then(data => {\n  //       addIdea(data);\n  //       console.log(data)\n  //       return data\n  //     })\n  //     .catch(err => {\n  //       console.log(err)\n\n  //     });\n\n  // };\n\n  // \n  // useEffect(() => {\n  //   const getSearchData = async () => {\n  //     if (input) {\n  //       const latitude = input;\n  //       let input = \"pain\"\n\n  //       try {\n  //         const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + { input } + '&limit=10';\n  //         const response = await fetch(url);\n  //         if (!response.ok) {\n  //           throw new Error('error retrieving medical info');\n  //         } else {\n  //           const data = await response.json();\n  //           console.log(data)\n\n  //         }\n  //       } catch (err) {\n  //         console.error(err);\n  //       }\n  //     }\n  //   };\n  //   void getSearchData();\n  // }, [input]);\n\n  // console.log(ideas, ' line25')\n  // console.log(responses, typeof(responses))\n  // console.log(typeof(responses))\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(FormComponent, {\n        ideas: ideas,\n        setFormVals: setFormVals,\n        addIdea: addIdea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(ExternalComponent, {\n        ideas: ideas,\n        setIdeas: setIdeas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [/*#__PURE__*/_jsxDEV(APIComponent, {\n        responses: responses,\n        setResponses: setResponses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 8\n      }, this), \"test\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UawJaYk9v1mSdS+N0wXV6te16I0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","ExternalComponent","FormComponent","React","useEffect","useState","APIComponent","jsxDEV","_jsxDEV","App","_s","dummyIdeas","id","title","description","emptyFormVals","formValues","setFormVals","ideas","setIdeas","responses","setResponses","addIdea","newIdea","input","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ryan/Desktop/Turingstuff/PetHealthProject/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport ExternalComponent from './Components/ExternalComponent';\nimport FormComponent from './Components/FormComponent';\nimport React, { useEffect, useState } from 'react';\nimport APIComponent from './Components/APIComponent';\n function App() {\n  const dummyIdeas = [\n    { id: 1, title: 'Prank Travis', description: 'Stick googly eyes on all his stuff' },\n    { id: 2, title: 'Make a secret password app', description: 'So you and your rideshare driver can both know neither one of you is lying' },\n    { id: 3, title: 'Learn a martial art', description: 'To exact vengeance upon my enemies' },\n  ]\n\n  const emptyFormVals = {\n    id: -1,\n    title: '',\n    description: '',\n  }\n\n  const [formValues, setFormVals] = useState(emptyFormVals)\n\n  const [ideas, setIdeas] = useState(dummyIdeas)\n  const [responses, setResponses] = useState({})\n\n  function addIdea(newIdea) {\n    setIdeas([...ideas, newIdea])\n  }\n \n\n  let input = \"pain\"\n\n  // const getPetHealth = async () => {\n  //   if (input) {\n\n  //     try {\n  //       const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1';\n  //       const response = await fetch(url);\n  //       if (!response.ok) {\n  //         console.log(\"not okay line 31\")\n  //         const err = new Error(response.statusText)\n  //         err.statusCode = response.status\n  //         throw err\n  //       } else {\n  //         const data = await response.json();\n  //         // console.log(responses);\n  //         // console.log(typeof(responses))\n  //         addResponse(data);\n  //         return data;\n  //       }\n  //     }\n  //     catch (err) {\n  //       console.error(err)\n  //     }\n  //   }\n  // };\n\n  useEffect(() => {\n    // getPetHealth();\n  }, []);\n\n  //   return fetch('https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1')\n  //     .then(res => {\n  //       if (!res.ok) {\n  //         console.log(\"not okay line 31\")\n  //         const err = new Error(res.statusText)\n  //         err.statusCode = res.status\n  //         throw err\n  //       }\n  //       console.log(\"okay line 36\")\n  //       return res.json()\n  //     })\n  //     .then(data => {\n  //       addIdea(data);\n  //       console.log(data)\n  //       return data\n  //     })\n  //     .catch(err => {\n  //       console.log(err)\n\n  //     });\n\n  // };\n\n  // \n  // useEffect(() => {\n  //   const getSearchData = async () => {\n  //     if (input) {\n  //       const latitude = input;\n  //       let input = \"pain\"\n\n  //       try {\n  //         const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + { input } + '&limit=10';\n  //         const response = await fetch(url);\n  //         if (!response.ok) {\n  //           throw new Error('error retrieving medical info');\n  //         } else {\n  //           const data = await response.json();\n  //           console.log(data)\n\n  //         }\n  //       } catch (err) {\n  //         console.error(err);\n  //       }\n  //     }\n  //   };\n  //   void getSearchData();\n  // }, [input]);\n\n\n\n  // console.log(ideas, ' line25')\n  // console.log(responses, typeof(responses))\n  // console.log(typeof(responses))\n  return (\n    <div className=\"App\">\n      <h1>\n        <FormComponent ideas={ideas} setFormVals={setFormVals} addIdea={addIdea} />\n      </h1>\n      <h2>\n        <ExternalComponent ideas={ideas} setIdeas={setIdeas} />\n      </h2>\n      <h3>\n       <APIComponent responses={responses} setResponses={setResponses} />\n       test\n      </h3>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}