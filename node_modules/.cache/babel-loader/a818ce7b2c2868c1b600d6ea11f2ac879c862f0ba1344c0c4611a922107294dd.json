{"ast":null,"code":"var _s = $RefreshSig$();\nimport './APIComponent.css';\nimport { useEffect, useLayoutEffect, useState } from 'react';\nimport React from 'react';\n\n/// pass in input from outside this component, from formcomponent probably\n// use that to determine the parameters for the search/lookup\n\nfunction APIComponent({\n  responses,\n  setResponses\n}) {\n  _s();\n  function addResponse(newResponse) {\n    setResponses([...responses, newResponse]);\n  }\n  let input = \"pain\";\n  let retVal = \"test\";\n  const getPetHealth = async () => {\n    if (input) {\n      try {\n        const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1';\n        const response = await fetch(url);\n        if (!response.ok) {\n          console.log(\"not okay line 31\");\n          const err = new Error(response.statusText);\n          err.statusCode = response.status;\n          throw err;\n        } else {\n          const data = await response.json();\n          // console.log(responses);\n          // console.log(typeof(responses))\n          retVal = await data[0];\n          addResponse(data);\n          return data;\n        }\n      } catch (err) {\n        console.error(err);\n      }\n      ;\n    }\n    ;\n  };\n  useEffect(() => {\n    getPetHealth().then(async data => {\n      //   addResponse(data);\n      console.log(responses);\n      console.log(responses.results);\n      retVal = await responses[0];\n      console.log(retVal);\n    });\n  }, [retVal]);\n  console.log(retVal);\n  return JSON.stringify(responses[0].meta);\n}\n_s(APIComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = APIComponent;\nexport default APIComponent;\nvar _c;\n$RefreshReg$(_c, \"APIComponent\");","map":{"version":3,"names":["useEffect","useLayoutEffect","useState","React","APIComponent","responses","setResponses","_s","addResponse","newResponse","input","retVal","getPetHealth","url","response","fetch","ok","console","log","err","Error","statusText","statusCode","status","data","json","error","then","results","JSON","stringify","meta","_c","$RefreshReg$"],"sources":["/Users/ryan/Desktop/Turingstuff/PetHealthProject/src/Components/APIComponent.js"],"sourcesContent":["import './APIComponent.css';\nimport { useEffect, useLayoutEffect, useState } from 'react';\nimport React from 'react';\n\n/// pass in input from outside this component, from formcomponent probably\n// use that to determine the parameters for the search/lookup\n\nfunction APIComponent({ responses, setResponses }) {\n    function addResponse(newResponse) {\n        setResponses([...responses, newResponse])\n      }\n    let input = \"pain\"\n    let retVal =\"test\"\n\n    const getPetHealth = async () => {\n        if (input) {\n          try {\n            const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1';\n            const response = await fetch(url);\n            if (!response.ok) {\n              console.log(\"not okay line 31\")\n              const err = new Error(response.statusText)\n              err.statusCode = response.status\n              throw err\n            } else {\n              const data = await response.json();\n              // console.log(responses);\n              // console.log(typeof(responses))\n             retVal = await data[0];\n              addResponse(data);\n              return data;\n            } \n          }\n          catch (err) {\n            console.error(err)\n          };\n        }; \n      };\n\n\n    useEffect(() => {\n     getPetHealth()\n     .then(\n       async data => \n        {\n            //   addResponse(data);\n            console.log((responses))\n            console.log(responses.results)\n            retVal = await responses[0];\n            console.log(retVal);\n        }\n     );  \n    }, [retVal]);\n\nconsole.log(retVal)\n\n    return (\n        JSON.stringify(responses[0].meta)\n    )\n}\n\n\n\n\n\nexport default APIComponent;"],"mappings":";AAAA,OAAO,oBAAoB;AAC3B,SAASA,SAAS,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AAC5D,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;;AAEA,SAASC,YAAYA,CAAC;EAAEC,SAAS;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC/C,SAASC,WAAWA,CAACC,WAAW,EAAE;IAC9BH,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEI,WAAW,CAAC,CAAC;EAC3C;EACF,IAAIC,KAAK,GAAG,MAAM;EAClB,IAAIC,MAAM,GAAE,MAAM;EAElB,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIF,KAAK,EAAE;MACT,IAAI;QACF,MAAMG,GAAG,GAAG,4DAA4D,GAAGH,KAAK,GAAG,UAAU;QAC7F,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;UAChBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;UAC/B,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAACN,QAAQ,CAACO,UAAU,CAAC;UAC1CF,GAAG,CAACG,UAAU,GAAGR,QAAQ,CAACS,MAAM;UAChC,MAAMJ,GAAG;QACX,CAAC,MAAM;UACL,MAAMK,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;UAClC;UACA;UACDd,MAAM,GAAG,MAAMa,IAAI,CAAC,CAAC,CAAC;UACrBhB,WAAW,CAACgB,IAAI,CAAC;UACjB,OAAOA,IAAI;QACb;MACF,CAAC,CACD,OAAOL,GAAG,EAAE;QACVF,OAAO,CAACS,KAAK,CAACP,GAAG,CAAC;MACpB;MAAC;IACH;IAAC;EACH,CAAC;EAGHnB,SAAS,CAAC,MAAM;IACfY,YAAY,CAAC,CAAC,CACbe,IAAI,CACH,MAAMH,IAAI,IACT;MACI;MACAP,OAAO,CAACC,GAAG,CAAEb,SAAU,CAAC;MACxBY,OAAO,CAACC,GAAG,CAACb,SAAS,CAACuB,OAAO,CAAC;MAC9BjB,MAAM,GAAG,MAAMN,SAAS,CAAC,CAAC,CAAC;MAC3BY,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;IACvB,CACH,CAAC;EACF,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEhBM,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;EAEf,OACIkB,IAAI,CAACC,SAAS,CAACzB,SAAS,CAAC,CAAC,CAAC,CAAC0B,IAAI,CAAC;AAEzC;AAACxB,EAAA,CApDQH,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AA0DrB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}