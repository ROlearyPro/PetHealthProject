{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Desktop/Turingstuff/PetHealthProject/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport ExternalComponent from './Components/ExternalComponent';\nimport FormComponent from './Components/FormComponent';\nimport React, { useEffect, useState } from 'react';\nimport APIComponent from './Components/APIComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dummyIdeas = [{\n    id: 1,\n    title: 'Prank Travis',\n    description: 'Stick googly eyes on all his stuff'\n  }, {\n    id: 2,\n    title: 'Make a secret password app',\n    description: 'So you and your rideshare driver can both know neither one of you is lying'\n  }, {\n    id: 3,\n    title: 'Learn a martial art',\n    description: 'To exact vengeance upon my enemies'\n  }];\n  const emptyFormVals = {\n    id: -1,\n    title: '',\n    description: ''\n  };\n  const [formValues, setFormVals] = useState(emptyFormVals);\n  const [ideas, setIdeas] = useState(dummyIdeas);\n  const [responses, setResponses] = useState([]);\n  function addIdea(newIdea) {\n    setIdeas([...ideas, newIdea]);\n  }\n  function addResponse(newResponse) {\n    setResponses([...responses, newResponse]);\n  }\n  let input = \"pain\";\n  const getPetHealth = async () => {\n    if (input) {\n      try {\n        const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1';\n        const response = await fetch(url);\n        if (!response.ok) {\n          console.log(\"not okay line 31\");\n          const err = new Error(response.statusText);\n          err.statusCode = response.status;\n          throw err;\n        } else {\n          const data = await response.json();\n          console.log(response);\n          console.log(typeof response);\n          addResponse(data);\n          return data;\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n  useEffect(() => {\n    getPetHealth();\n  }, []);\n\n  //   return fetch('https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1')\n  //     .then(res => {\n  //       if (!res.ok) {\n  //         console.log(\"not okay line 31\")\n  //         const err = new Error(res.statusText)\n  //         err.statusCode = res.status\n  //         throw err\n  //       }\n  //       console.log(\"okay line 36\")\n  //       return res.json()\n  //     })\n  //     .then(data => {\n  //       addIdea(data);\n  //       console.log(data)\n  //       return data\n  //     })\n  //     .catch(err => {\n  //       console.log(err)\n\n  //     });\n\n  // };\n\n  // \n  // useEffect(() => {\n  //   const getSearchData = async () => {\n  //     if (input) {\n  //       const latitude = input;\n  //       let input = \"pain\"\n\n  //       try {\n  //         const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + { input } + '&limit=10';\n  //         const response = await fetch(url);\n  //         if (!response.ok) {\n  //           throw new Error('error retrieving medical info');\n  //         } else {\n  //           const data = await response.json();\n  //           console.log(data)\n\n  //         }\n  //       } catch (err) {\n  //         console.error(err);\n  //       }\n  //     }\n  //   };\n  //   void getSearchData();\n  // }, [input]);\n\n  useEffect(() => {\n    getPetHealth().then(data => {\n      console.log(data);\n    });\n  }, []);\n  console.log(ideas, ' line25');\n  console.log(responses, typeof responses);\n  console.log(responses[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(FormComponent, {\n        ideas: ideas,\n        setFormVals: setFormVals,\n        addIdea: addIdea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(ExternalComponent, {\n        ideas: ideas,\n        setIdeas: setIdeas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(APIComponent\n      // responses={responses}\n      , {\n        addResponse: addResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Qvl90HxvjO2Biqudy7D9hScCAqs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","ExternalComponent","FormComponent","React","useEffect","useState","APIComponent","jsxDEV","_jsxDEV","App","_s","dummyIdeas","id","title","description","emptyFormVals","formValues","setFormVals","ideas","setIdeas","responses","setResponses","addIdea","newIdea","addResponse","newResponse","input","getPetHealth","url","response","fetch","ok","console","log","err","Error","statusText","statusCode","status","data","json","error","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ryan/Desktop/Turingstuff/PetHealthProject/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport ExternalComponent from './Components/ExternalComponent';\nimport FormComponent from './Components/FormComponent';\nimport React, { useEffect, useState } from 'react';\nimport APIComponent from './Components/APIComponent';\nfunction App() {\n  const dummyIdeas = [\n    { id: 1, title: 'Prank Travis', description: 'Stick googly eyes on all his stuff' },\n    { id: 2, title: 'Make a secret password app', description: 'So you and your rideshare driver can both know neither one of you is lying' },\n    { id: 3, title: 'Learn a martial art', description: 'To exact vengeance upon my enemies' },\n  ]\n\n  const emptyFormVals = {\n    id: -1,\n    title: '',\n    description: '',\n  }\n\n  const [formValues, setFormVals] = useState(emptyFormVals)\n\n  const [ideas, setIdeas] = useState(dummyIdeas)\n  const [responses, setResponses] = useState([])\n\n  function addIdea(newIdea) {\n    setIdeas([...ideas, newIdea])\n  }\n  function addResponse(newResponse) {\n    setResponses([...responses, newResponse])\n  }\n\n  let input = \"pain\"\n\n  const getPetHealth = async () => {\n    if (input) {\n\n      try {\n        const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1';\n        const response = await fetch(url);\n        if (!response.ok) {\n          console.log(\"not okay line 31\")\n          const err = new Error(response.statusText)\n          err.statusCode = response.status\n          throw err\n        } else {\n          const data = await response.json();\n          console.log(response);\n          console.log(typeof(response))\n          addResponse(data);\n          return data;\n        }\n      }\n      catch (err) {\n        console.error(err)\n      }\n    }\n  };\n\n  useEffect(() => {\n    getPetHealth();\n  }, []);\n\n  //   return fetch('https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1')\n  //     .then(res => {\n  //       if (!res.ok) {\n  //         console.log(\"not okay line 31\")\n  //         const err = new Error(res.statusText)\n  //         err.statusCode = res.status\n  //         throw err\n  //       }\n  //       console.log(\"okay line 36\")\n  //       return res.json()\n  //     })\n  //     .then(data => {\n  //       addIdea(data);\n  //       console.log(data)\n  //       return data\n  //     })\n  //     .catch(err => {\n  //       console.log(err)\n\n  //     });\n\n  // };\n\n  // \n  // useEffect(() => {\n  //   const getSearchData = async () => {\n  //     if (input) {\n  //       const latitude = input;\n  //       let input = \"pain\"\n\n  //       try {\n  //         const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + { input } + '&limit=10';\n  //         const response = await fetch(url);\n  //         if (!response.ok) {\n  //           throw new Error('error retrieving medical info');\n  //         } else {\n  //           const data = await response.json();\n  //           console.log(data)\n\n  //         }\n  //       } catch (err) {\n  //         console.error(err);\n  //       }\n  //     }\n  //   };\n  //   void getSearchData();\n  // }, [input]);\n\n\n    useEffect(()=>{\n    getPetHealth().then(\n      data=>{\n        console.log(data);\n      }\n    )\n  }, [])\n\n  console.log(ideas, ' line25')\n  console.log(responses, typeof(responses))\n  console.log(responses[0])\n  return (\n    <div className=\"App\">\n      <h1>\n        <FormComponent ideas={ideas} setFormVals={setFormVals} addIdea={addIdea} />\n      </h1>\n      <h2>\n        <ExternalComponent ideas={ideas} setIdeas={setIdeas} />\n      </h2>\n      <h3>\n      <APIComponent \n      // responses={responses}\n       addResponse={addResponse} />\n\n      </h3>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}