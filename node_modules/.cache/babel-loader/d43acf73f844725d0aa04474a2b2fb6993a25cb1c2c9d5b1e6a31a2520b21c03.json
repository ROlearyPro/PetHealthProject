{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Desktop/Turingstuff/PetHealthProject/src/Components/APIComponent.js\",\n  _s = $RefreshSig$();\nimport './APIComponent.css';\nimport { useEffect, useState } from 'react';\nimport React from 'react';\n\n/// pass in input from outside this component, from formcomponent probably\n// use that to determine the parameters for the search/lookup\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction APIComponent({\n  responses,\n  setResponses\n}) {\n  _s();\n  function addResponse(newResponse) {\n    setResponses([...responses, newResponse]);\n  }\n  let input = \"pain\";\n  useEffect(() => {\n    const getPetHealth = async () => {\n      if (input) {\n        try {\n          const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1';\n          const response = await fetch(url);\n          if (!response.ok) {\n            console.log(\"not okay line 31\");\n            const err = new Error(response.statusText);\n            err.statusCode = response.status;\n            throw err;\n          } else {\n            const data = await response.json();\n            // console.log(responses);\n            // console.log(typeof(responses))\n            addResponse(data);\n            return data;\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    };\n  }, []);\n  console.log(responses);\n  console.log(responses);\n  // console.log(responses.results)\n  // getPetHealth();\n  // console.log(response)\n\n  // async function receiveResponses() {\n  //     // console.log(await responses);\n  //     const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1';\n\n  //     const response = await fetch(url);\n\n  //     console.log(\"awaiting responses\")\n  //     return await response.json()\n\n  let retVal = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"s\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 18\n  }, this);\n  return retVal;\n}\n_s(APIComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = APIComponent;\nexport default APIComponent;\nvar _c;\n$RefreshReg$(_c, \"APIComponent\");","map":{"version":3,"names":["useEffect","useState","React","jsxDEV","_jsxDEV","APIComponent","responses","setResponses","_s","addResponse","newResponse","input","getPetHealth","url","response","fetch","ok","console","log","err","Error","statusText","statusCode","status","data","json","error","retVal","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ryan/Desktop/Turingstuff/PetHealthProject/src/Components/APIComponent.js"],"sourcesContent":["import './APIComponent.css';\nimport { useEffect, useState } from 'react';\nimport React from 'react';\n\n/// pass in input from outside this component, from formcomponent probably\n// use that to determine the parameters for the search/lookup\n\nfunction APIComponent({ responses, setResponses }) {\n    function addResponse(newResponse) {\n        setResponses([...responses, newResponse])\n      }\n    let input = \"pain\"\n    useEffect(() => { const getPetHealth = async () => {\n        if (input) {\n    \n          try {\n            const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1';\n            const response = await fetch(url);\n            if (!response.ok) {\n              console.log(\"not okay line 31\")\n              const err = new Error(response.statusText)\n              err.statusCode = response.status\n              throw err\n            } else {\n              const data = await response.json();\n              // console.log(responses);\n              // console.log(typeof(responses))\n              addResponse(data);\n              return data;\n            }\n          }\n          catch (err) {\n            console.error(err)\n          }\n        }\n      };}, []);\n    console.log(responses)\n    \n    console.log(responses)\n    // console.log(responses.results)\n    // getPetHealth();\n    // console.log(response)\n\n\n    // async function receiveResponses() {\n    //     // console.log(await responses);\n    //     const url = 'https://api.fda.gov/animalandveterinary/event.json?search=' + input + '&limit=1';\n\n    //     const response = await fetch(url);\n\n    //     console.log(\"awaiting responses\")\n    //     return await response.json()\n\n    let retVal = <div>s</div>\n    return retVal\n\n    }\n\n\n\n\n\nexport default APIComponent;"],"mappings":";;AAAA,OAAO,oBAAoB;AAC3B,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,YAAYA,CAAC;EAAEC,SAAS;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC/C,SAASC,WAAWA,CAACC,WAAW,EAAE;IAC9BH,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEI,WAAW,CAAC,CAAC;EAC3C;EACF,IAAIC,KAAK,GAAG,MAAM;EAClBX,SAAS,CAAC,MAAM;IAAE,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/C,IAAID,KAAK,EAAE;QAET,IAAI;UACF,MAAME,GAAG,GAAG,4DAA4D,GAAGF,KAAK,GAAG,UAAU;UAC7F,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;UACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;YAChBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;YAC/B,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAACN,QAAQ,CAACO,UAAU,CAAC;YAC1CF,GAAG,CAACG,UAAU,GAAGR,QAAQ,CAACS,MAAM;YAChC,MAAMJ,GAAG;UACX,CAAC,MAAM;YACL,MAAMK,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;YAClC;YACA;YACAhB,WAAW,CAACe,IAAI,CAAC;YACjB,OAAOA,IAAI;UACb;QACF,CAAC,CACD,OAAOL,GAAG,EAAE;UACVF,OAAO,CAACS,KAAK,CAACP,GAAG,CAAC;QACpB;MACF;IACF,CAAC;EAAC,CAAC,EAAE,EAAE,CAAC;EACVF,OAAO,CAACC,GAAG,CAACZ,SAAS,CAAC;EAEtBW,OAAO,CAACC,GAAG,CAACZ,SAAS,CAAC;EACtB;EACA;EACA;;EAGA;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA,IAAIqB,MAAM,gBAAGvB,OAAA;IAAAwB,QAAA,EAAK;EAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzB,OAAOL,MAAM;AAEb;AAACnB,EAAA,CAjDIH,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAuDrB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}